<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:fc="http://www.adobe.com/2006/fc"
	layout="absolute" creationComplete="init()" viewSourceURL="srcview/index.html" 	 >
	<mx:Style>
		.text {
			color: #222222;
			font-family: Verdana;
		}
	</mx:Style>
	<fc:AutoComplete id="txtSearch"  labelField="name" x="123" y="13" width="285" 
		keyUp="{keyUp(event);}" typedTextChange="{tryLoadHint();}"
		 />

	<fc:SpringGraph id="s" backgroundColor="#0" 
		lineColor="#333388" left="0" right="0" top="105" bottom="0"
		itemRenderer="RelationItemView" repulsionFactor="{rep.value}"
		edgeRenderer="{new EdgeRender()}"
		 >
	</fc:SpringGraph>
	
	<mx:Label x="123" y="77" text="你可能还在找" styleName="text" fontSize="13" id="lblRecommend"/>
	<mx:Label x="10" y="10" text="Movie Cube" styleName="text" fontSize="15"/>
	<mx:Label x="123" y="43" fontSize="10" styleName="text" id="help" width="285"/>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.LinkButton;
		import com.adobe.flex.extras.controls.springgraph.Graph;	
		import com.adobe.serialization.json.JSON;  
		import mx.controls.Alert;
		import tipBubble.*;
				
		[Bindable]
		public var scaleFactor: Number = 1.0;
		
		private var items: Graph;
		private var serviceUrl:String = "http://localhost:49899/Relation.aspx";
		//private var serviceUrl:String = "/Relation.aspx";
		
		private var oldHintText:String = "";

		public var tipMan:BubbleTipManager = new BubbleTipManager();
		 
		[Bindable]
		private var keys:Array = null;

		private function addItem(data:Object, linkTo: RelationItem,rank:int): RelationItem {
			var newItem: RelationItem = new RelationItem(data,rank);
			items.add(newItem);
			if(linkTo != null)
				items.link(newItem, linkTo);
			s.dataProvider = items;
			return newItem;
		}
		
		
		private function tryLoadHint():void
		{
			if (txtSearch.text.length!=0 &&
					(oldHintText.length == 0 || oldHintText.charAt(0) != txtSearch.text.charAt(0))
					)
				{	
					loadKeys();
					oldHintText = txtSearch.text;
				}
		}
		
		private function keyUp(event:KeyboardEvent):void
		{
			if (event.keyCode == 13) 
				search();
		}
		
	   private function init():void
	   {
	   		items = new Graph();
		    this.reSearch("成龙");
	   }
	   
	   private function loadKeys():void
	   {
	   		var request:URLRequest = new URLRequest(serviceUrl);
		    request.method = URLRequestMethod.POST;
		    var data:URLVariables = new URLVariables();
		    data.type = "loadKeys";
		    data.query = txtSearch.text;
		    request.data = data;
		    var loader:URLLoader = new URLLoader();
		    loader.load(request);
		    loader.addEventListener(Event.COMPLETE,onLoadKeyComplete);
		    loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
	   }
	   
	   public function searchKey(key:String):void
	   {
	   		var myLoader:URLLoader = new URLLoader();
			var myRequest:URLRequest;
	   		help.text = "加载 "+key+" 中...";
	   		myRequest = new URLRequest(serviceUrl);
		    myRequest.method = URLRequestMethod.POST;
		    var data:URLVariables = new URLVariables();
		    data.type = "queryByKey";
		    data.query = key; 
		    myRequest.data = data;
		    myLoader.load(myRequest);
		    myLoader.addEventListener(Event.COMPLETE,onSearchComplete);
		    myLoader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
	   }
	   
	   public function loadStar(name:String):void
	   {
	   		var myLoader:URLLoader = new URLLoader();
			var myRequest:URLRequest;
	   		help.text = "加载明星 "+name+" 中...";
	   		myRequest = new URLRequest(serviceUrl);
		    myRequest.method = URLRequestMethod.POST;
		    var data:URLVariables = new URLVariables();
		    data.type = "queryStarByName";
		    data.query = name; 
		    myRequest.data = data;
		    myLoader.load(myRequest);
		    myLoader.addEventListener(Event.COMPLETE,onSearchComplete);
		    myLoader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
	   }
	   
	   public function loadMovie(name:String):void
	   {
	   		help.text = "加载电影 "+name+" 中...";
	   		
	   		var myLoader:URLLoader = new URLLoader();
			var myRequest:URLRequest;
	   		myRequest = new URLRequest(serviceUrl);
		    myRequest.method = URLRequestMethod.POST;
		    var data:URLVariables = new URLVariables();
		    data.type = "queryMovieByStar";
		    data.query = name; 
		    myRequest.data = data;
		    myLoader.load(myRequest);
		    myLoader.addEventListener(Event.COMPLETE,onSearchComplete);
		    myLoader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
	   }
	   
	   private function addMovie(data:Object,item:RelationItem,rank:int = 0):void
	   {
	   		if(data == null)
	   			return; 
			var id: String = data.ID;
			var newItem:RelationItem = items.find(id) as RelationItem;
			if (newItem == null)
				newItem = addItem(data, item,rank);
			else{
				//更新数据，新查出来的数据比较全
				newItem.updateData(data);
				
				if (item!=null)
					items.link(newItem, item);
			}
				
	   		for(var j:int = 0;j<data.Stars.length;++j)
			{
				addStar(data.Stars[j].Star,newItem,j);
			}
	   }
	   
	   private function addStar(data:Object,item:RelationItem,rank:int = 0):void
	   {
	   		if(data == null)
	   			return; 
			var id: String = data.ID;
			var newItem:RelationItem = items.find(id) as RelationItem;
			if (newItem == null)
				newItem = addItem(data, item,rank);
			else
			{
				//更新数据，新查出来的数据比较全
				newItem.updateData(data);
				
				if (item!=null)
					items.link(newItem, item);
			}
				
	   		for(var j:int = 0;j<data.Movies.length;++j)
			{
				addMovie(data.Movies[j].Movie,newItem,j);
			}
	   }
   

	   private function errorHandler(e:IOErrorEvent):void
	   {
	   		this.help.text = "操作失败";		  		
	   }
	   

		
		private function onLoadKeyComplete(event:Event):void
		{
			var loader:URLLoader = URLLoader(event.target);
			keys = (JSON.decode(loader.data) as Array);
			
			var oldText:String = txtSearch.typedText;
			txtSearch.dataProvider=keys;
			txtSearch.labelField = "Key";
			txtSearch.typedText = oldText;
			this.help.text = "加载关键字成功";
		}
		
		private function onSearchComplete(event:Event):void
		{
			help.text += "完成";
			var loader:URLLoader = URLLoader(event.target);
			var result:Array = (JSON.decode(loader.data) as Array);
			if (result!=null && result.length > 0)
			{
				if (result[0].ObjectType == "MOVIE")
					addMovie(result[0],null);
				else
					addStar(result[0],null);
				
				if (result.length > 1)
				{
					this.lblRecommend.visible = true;
					if (result.length <= 5)
						this.createBtnRecommend(result);
					else
						this.createListRecommend(result);
				}

			}
		}
		
		public function search():void
		{
			items.empty();
			resetRecommend();
			if (txtSearch.text!="")
				this.searchKey(txtSearch.text);
		}
		
		public function reSearch(key:String):void
		{
			this.txtSearch.text = key;
			search();
		}
		
		private function createBtnRecommend(result:Object):void
		{
			this.recommendBox.visible = true;
			for(var i:int = 1;i<result.length;++i)
			{
				
				var btnRecommend:Button = new Button();
				btnRecommend.label = result[i].Name;
				btnRecommend.addEventListener(MouseEvent.CLICK,searchRecommend);
				this.recommendBox.addChild(btnRecommend);
			}
		}
		
		private function createListRecommend(result:Object):void
		{
			this.cbxMore.visible = true;
			var dp:Array = new Array();
			for(var i:int = 1;i<result.length;++i)
			{
				dp.push(result[i].Name);
			}
			cbxMore.dataProvider = dp;
		}
		
		private function resetRecommend():void
		{
			this.recommendBox.removeAllChildren();
			this.lblRecommend.visible = false;
			this.cbxMore.dataProvider = null;
			this.cbxMore.visible = false;
			
		} 
		
		//查找推荐
		private function searchRecommend(event:MouseEvent):void
		{
			var btn:Button = event.target as Button;
			this.reSearch(btn.label);
		}
		
		


		]]>
	</mx:Script>
	<mx:Button x="492" y="13" label="搜索" id="btnSearch" click="{search();}" 
		/>
	<mx:HSlider id="rep" x="416" y="43" value="0.14" minimum="0.05" maximum="1.5" liveDragging="true" change="s.refresh();" width="101"/>
	<mx:HSlider x="525" y="43" value="1.0" minimum="0.05" maximum="1.2" liveDragging="true" change="scaleFactor = event.currentTarget.value; s.refresh();" width="106"/>
	<mx:HBox width="100%" id="recommendBox" left="214" top="77" >
	</mx:HBox>
	<mx:ComboBox x="213" y="78" id="cbxMore" editable="false" change="{if (cbxMore.dataProvider!=null) this.reSearch(cbxMore.selectedLabel);}" ></mx:ComboBox>
	<mx:ComboBox x="416" y="13" width="68" id="cbxSearchType"></mx:ComboBox>
	
	
</mx:Application>
