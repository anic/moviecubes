<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" initialize="{init();}" 
	 scaleX="{app.scaleFactor}" scaleY="{app.scaleFactor}"
	 xmlns:local="*"
	 width="110" height="110"
   >	

	<!--
	////////////////////////////////////////////////////////////////////////////////
	//
	//  Copyright (C) 2006 Adobe Macromedia Software LLC and its licensors.
	//  All Rights Reserved. The following is Source Code and is subject to all
	//  restrictions on such code as contained in the End User License Agreement
	//  accompanying this product.
	//
	////////////////////////////////////////////////////////////////////////////////
	-->
	
	<mx:Style source="MyTheme.css" /> 
   <mx:Glow id="effectAdd" duration="3000" 
        alphaFrom="1.0" alphaTo="1.0" 
        blurXFrom="0.0" blurXTo="50.0" 
        blurYFrom="0.0" blurYTo="50.0" 
        target="{this.circle}"
        color="{data.color}"/>
        
    
	<local:Circle id="circle" width="100%" height="100%" color="{data.color}"/>

	<mx:Text id="txtName" text="{data.name}" textAlign="center" styleName="text" fontSize="15" 
		scaleX="{app.scaleFactor}" scaleY="{app.scaleFactor}" color="#FFFFFF"
		 height="32" width="100%" horizontalCenter="0" verticalCenter="0" mouseChildren="false"/>
	
		
	<mx:Script>
		<![CDATA[
			import mx.messaging.AbstractConsumer;
			import mx.core.UIComponent;
			import mx.containers.VBox;
			import mx.controls.TextArea;
			import mx.core.Application;
			import tipBubble.BubbleTipTarget;
			
			private function init():void
			{
				//绑定视图
				(data as RelationItem).view = this;
				
				//设置合适的字体大小
				if (data.name.length>=5)
					txtName.setStyle("fontSize",14);
					
				this.addEventListener(MouseEvent.ROLL_OVER,this.onSelected);
				this.addEventListener(MouseEvent.ROLL_OUT,this.onNotSelected);
				onDataUpdate();
			}
			
			private function onSelected(event:MouseEvent):void
			{
				RelationGraph(Application.application).toolPanel.onSelected(this);
			}
			
			private function onNotSelected(event:MouseEvent):void
			{
				RelationGraph(Application.application).toolPanel.onNotSelected(this);
			}
			
			public function onDataUpdate():void
			{
				var offset:int = data.rank*5;
				this.circle.unscaledRadius = (this.width/2 - 20 - offset)>10? (this.width/2 - 20 - offset):10 ;
				
				//var target:UIComponent =  (this.width/2 - 20 - offset)>10? this.circle:this.txtName;
				var target:UIComponent = this;
				var bubbleTip:BubbleTipTarget = RelationGraph(Application.application).tipMan.getBubbleTip(target);
				if (bubbleTip==null)
				{
					var box:BaseBox = (data.isStar)? new StarBox():new MovieBox();
					box.data = data;
					RelationGraph(Application.application).tipMan.createMyBubbleTip(target,box,this);
				}
				else
				{
					
					(bubbleTip.tipComponent as BaseBox).fillData();
				}
				
				this.effectAdd.play();
			}
			
			
			[Bindable]
			private var app: RelationGraph = RelationGraph(Application.application);
			
			public function doubleClick(event: Event): void {
				searchTA(false);
			}
			
			public function searchTA(clearGraph:Boolean):void
			{
				if (data.isStar)
				{
					RelationGraph(Application.application).loadStarById(data.data.ID,data.name,clearGraph);	
				}
				else
				{
					RelationGraph(Application.application).loadMovieById(data.data.ID,data.name,clearGraph);
				}
			}
			
			public function removeItem():void
			{
				RelationGraph(Application.application).removeItem(this.data as RelationItem);
			}
			
			public function showPage(page:int):void
			{
				var tip:PageTip = new PageTip();
				tip.data = page + 1;
				var r:int = this.circle.unscaledRadius > this.txtName.height? this.circle.unscaledRadius:this.txtName.height;
				tip.x = this.width / 2 - r;
				tip.y = this.height/2 - r - 5;
				this.addChild(tip);
				tip.show();
				
			}
		]]>
	</mx:Script>
	
	
</mx:Canvas>
